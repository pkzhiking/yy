[analyze][01-26 20:53:25][1][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/a/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:53:53][1][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/b/b/code_size.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][1][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/d/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][2][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/j/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][3][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/f/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][4][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/i/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][5][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/p/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][6][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/m/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][7][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/a/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][8][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][9][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/o/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][10][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/n/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][11][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/h/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][12][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/e/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][13][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/g/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][14][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/r/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][15][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/c/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][16][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/q/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][17][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/l/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][18][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/d/k/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][19][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/d/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][20][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/j/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][21][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/f/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][22][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/i/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][23][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/p/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][24][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/m/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][25][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/a/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][26][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][27][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/o/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][28][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/n/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][29][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/h/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][30][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/e/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][31][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/g/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][32][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/r/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][33][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/c/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][34][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/q/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][35][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/l/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][36][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/f/k/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][37][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/d/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][38][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/j/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][39][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/f/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][40][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/i/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][41][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/p/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][42][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/m/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][43][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/a/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][44][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][45][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/o/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][46][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/n/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][47][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/h/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][48][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/e/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][49][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/g/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][50][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/r/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][51][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/c/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][52][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/q/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][53][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/l/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][54][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/i/k/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][55][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/d/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][56][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/j/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][57][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/f/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][58][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/i/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][59][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/p/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][60][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/m/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][61][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/a/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][62][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][63][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/o/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][64][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/n/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][65][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/h/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][66][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/e/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][67][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/g/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][68][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/r/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][69][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/c/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][70][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/q/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][71][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/l/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][72][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/a/k/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][73][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/d/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][74][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/j/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][75][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/f/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][76][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/i/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][77][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/p/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][78][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/m/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][79][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/a/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][80][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][81][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/o/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][82][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/n/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][83][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/h/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][84][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/e/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][85][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/g/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][86][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/r/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][87][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/c/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][88][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/q/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][89][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/l/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][90][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/b/k/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][91][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/d/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][92][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/j/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][93][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/f/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][94][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/i/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][95][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/p/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][96][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/m/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][97][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/a/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][98][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][99][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/o/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][100][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/n/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][101][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/h/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][102][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/e/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][103][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/g/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][104][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/r/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][105][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/c/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][106][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/q/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][107][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/l/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][108][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/h/k/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][109][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/d/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][110][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/j/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][111][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/f/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][112][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/i/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][113][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/p/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][114][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/m/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][115][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/a/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][116][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][117][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/o/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][118][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/n/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][119][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/h/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][120][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/e/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][121][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/g/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][122][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/r/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][123][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/c/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][124][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/q/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][125][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/l/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][126][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/e/k/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][127][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/d/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][128][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/j/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][129][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/f/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][130][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/i/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][131][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/p/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][132][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/m/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][133][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/a/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][134][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][135][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/o/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][136][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/n/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][137][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/h/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][138][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/e/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][139][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/g/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][140][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/r/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][141][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/c/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][142][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/q/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][143][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/l/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][144][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/g/k/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][145][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/d/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][146][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/j/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][147][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/f/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][148][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/i/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][149][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/p/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][150][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/m/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][151][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/a/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][152][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][153][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/o/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][154][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/n/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][155][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/h/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][156][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/e/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][157][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/g/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][158][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/r/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][159][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/c/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][160][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/q/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][161][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/l/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:10][162][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/c/a/c/k/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:55:47][1][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/a/hello_world/a_b/b/code_size.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-26 20:59:13][1][FunctionCodeSizeAnalyzer]msg:Function: tests_allocate has only 18 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:75 tests_allocate (size_t size)
[analyze][01-26 20:59:13][2][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function tests_allocate is 64. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:75 tests_allocate (size_t size)
[analyze][01-26 20:59:13][3][FunctionCodeSizeAnalyzer]msg:Function: tests_reallocate has only 35 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:95 tests_reallocate (void *ptr, size_t old_size, size_t new_size)
[analyze][01-26 20:59:13][4][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function tests_reallocate is 192. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:95 tests_reallocate (void *ptr, size_t old_size, size_t new_size)
[analyze][01-26 20:59:13][5][FunctionCodeSizeAnalyzer]msg:Function: tests_free_nosize has only 14 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:143 tests_free_nosize (void *ptr)
[analyze][01-26 20:59:13][6][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function tests_free_nosize is 256. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:143 tests_free_nosize (void *ptr)
[analyze][01-26 20:59:13][7][LoopDivideAnalyzer]msg:This loop can be divided into two loops for it has 1 code lines/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:190       for (h = tests_memory_list; h != NULL; h = h->next)
[analyze][01-26 20:59:13][8][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:189      count = 0;
[analyze][01-26 20:59:13][9][FunctionCodeSizeAnalyzer]msg:Function: tests_memory_end has only 16 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:180 tests_memory_end (void)
[analyze][01-26 20:59:13][10][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function tests_memory_end is 192. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:180 tests_memory_end (void)
[analyze][01-26 20:59:13][11][FunctionCodeSizeAnalyzer]msg:Function: tests_memory_find has only 9 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:55 tests_memory_find (void *ptr)
[analyze][01-26 20:59:13][12][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function tests_memory_find is 64. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:55 tests_memory_find (void *ptr)
[analyze][01-26 20:59:13][13][FunctionCodeSizeAnalyzer]msg:Function: tests_free_find has only 12 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:130 tests_free_find (void *ptr)
[analyze][01-26 20:59:13][14][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function tests_free_find is 64. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:130 tests_free_find (void *ptr)
[analyze][01-26 20:59:13][15][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:175  tests_memory_list = NULL;
[analyze][01-26 20:59:13][16][FunctionCodeSizeAnalyzer]msg:Function: __gmp_set_memory_functions has only 6 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:541 
[analyze][01-26 20:59:13][17][FunctionCodeSizeAnalyzer]msg:Function: tests_free has only 17 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:155 tests_free (void *ptr, size_t size)
[analyze][01-26 20:59:13][18][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function tests_free is 192. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/d/mpc-0.8.1/tests/memory.c:155 tests_free (void *ptr, size_t size)
[analyze][01-26 21:01:42][1][FunctionCodeSizeAnalyzer]msg:Function: tests_allocate has only 18 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:75 tests_allocate (size_t size)
[analyze][01-26 21:01:42][2][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function tests_allocate is 64. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:75 tests_allocate (size_t size)
[analyze][01-26 21:01:42][3][FunctionCodeSizeAnalyzer]msg:Function: tests_reallocate has only 35 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:95 tests_reallocate (void *ptr, size_t old_size, size_t new_size)
[analyze][01-26 21:01:42][4][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function tests_reallocate is 192. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:95 tests_reallocate (void *ptr, size_t old_size, size_t new_size)
[analyze][01-26 21:01:42][5][FunctionCodeSizeAnalyzer]msg:Function: tests_free_nosize has only 14 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:143 tests_free_nosize (void *ptr)
[analyze][01-26 21:01:42][6][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function tests_free_nosize is 256. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:143 tests_free_nosize (void *ptr)
[analyze][01-26 21:01:42][7][LoopDivideAnalyzer]msg:This loop can be divided into two loops for it has 1 code lines/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:190       for (h = tests_memory_list; h != NULL; h = h->next)
[analyze][01-26 21:01:42][8][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:189      count = 0;
[analyze][01-26 21:01:42][9][FunctionCodeSizeAnalyzer]msg:Function: tests_memory_end has only 16 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:180 tests_memory_end (void)
[analyze][01-26 21:01:42][10][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function tests_memory_end is 192. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:180 tests_memory_end (void)
[analyze][01-26 21:01:42][11][FunctionCodeSizeAnalyzer]msg:Function: tests_memory_find has only 9 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:55 tests_memory_find (void *ptr)
[analyze][01-26 21:01:42][12][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function tests_memory_find is 64. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:55 tests_memory_find (void *ptr)
[analyze][01-26 21:01:42][13][FunctionCodeSizeAnalyzer]msg:Function: tests_free_find has only 12 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:130 tests_free_find (void *ptr)
[analyze][01-26 21:01:42][14][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function tests_free_find is 64. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:130 tests_free_find (void *ptr)
[analyze][01-26 21:01:42][15][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:175  tests_memory_list = NULL;
[analyze][01-26 21:01:42][16][FunctionCodeSizeAnalyzer]msg:Function: __gmp_set_memory_functions has only 6 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:541 
[analyze][01-26 21:01:42][17][FunctionCodeSizeAnalyzer]msg:Function: tests_free has only 17 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:155 tests_free (void *ptr, size_t size)
[analyze][01-26 21:01:42][18][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function tests_free is 192. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/e/mpc-0.8.1/tests/memory.c:155 tests_free (void *ptr, size_t size)
[analyze][01-26 21:45:21][1][ForLoopToZeroAnalyzer]msg:Loop iterator is initiated to 0 (may be rewrite with a reverse loop to 0) /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/i/loop-wrap.c:19   for (loop_wrap1=0; loop_wrap1<loop_wrap2; loop_wrap1++)
[analyze][01-26 21:45:21][2][LoopDivideAnalyzer]msg:This loop can be divided into two loops for it has 1 code lines/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/i/loop-wrap.c:19   for (loop_wrap1=0; loop_wrap1<loop_wrap2; loop_wrap1++)
[analyze][01-26 21:45:21][3][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/i/loop-wrap.c:19  for (loop_wrap1=0; loop_wrap1<loop_wrap2; loop_wrap1++)
[analyze][01-26 21:45:21][4][FunctionCodeSizeAnalyzer]msg:Function: main has only 28 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/i/loop-wrap.c:5 int main(int argc, char* argv[])
[analyze][01-26 21:45:21][5][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 512. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/i/loop-wrap.c:5 int main(int argc, char* argv[])
[analyze][01-26 21:50:02][1][ForLoopToZeroAnalyzer]msg:Loop iterator is initiated to 0 (may be rewrite with a reverse loop to 0) /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/j/loop-wrap.c:19   for (loop_wrap1=0; loop_wrap1<loop_wrap2; loop_wrap1++)
[analyze][01-26 21:50:02][2][LoopDivideAnalyzer]msg:This loop can be divided into two loops for it has 1 code lines/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/j/loop-wrap.c:19   for (loop_wrap1=0; loop_wrap1<loop_wrap2; loop_wrap1++)
[analyze][01-26 21:50:02][3][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/j/loop-wrap.c:19  for (loop_wrap1=0; loop_wrap1<loop_wrap2; loop_wrap1++)
[analyze][01-26 21:50:02][4][FunctionCodeSizeAnalyzer]msg:Function: main has only 28 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/j/loop-wrap.c:5 int main(int argc, char* argv[])
[analyze][01-26 21:50:02][5][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 512. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/j/loop-wrap.c:5 int main(int argc, char* argv[])
[analyze][01-26 22:00:47][1][ForLoopToZeroAnalyzer]msg:Loop iterator is initiated to 0 (may be rewrite with a reverse loop to 0) /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/loop-wrap.c:19   for (loop_wrap1=0; loop_wrap1<loop_wrap2; loop_wrap1++)
[analyze][01-26 22:00:47][2][LoopDivideAnalyzer]msg:This loop can be divided into two loops for it has 1 code lines/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/loop-wrap.c:19   for (loop_wrap1=0; loop_wrap1<loop_wrap2; loop_wrap1++)
[analyze][01-26 22:00:47][3][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/loop-wrap.c:19  for (loop_wrap1=0; loop_wrap1<loop_wrap2; loop_wrap1++)
[analyze][01-26 22:00:47][4][FunctionCodeSizeAnalyzer]msg:Function: main has only 28 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/loop-wrap.c:5 int main(int argc, char* argv[])
[analyze][01-26 22:00:47][5][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 512. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/loop-wrap.c:5 int main(int argc, char* argv[])
[analyze][01-26 22:03:45][1][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=7)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1715corner_list[n].info=7;
[analyze][01-26 22:03:45][2][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1704corner_list[n].info=0;
[analyze][01-26 22:03:45][3][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=5)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1615    for (j=5;j<x_size-5;j++) {
[analyze][01-26 22:03:45][4][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=5)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1614  for (i=5;i<y_size-5;i++)
[analyze][01-26 22:03:45][5][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1613  n=0;
[analyze][01-26 22:03:45][6][DivideByTwosExponentAnalyzer]msg:divide by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1589            if ( sq > ((n*n)/2) )
[analyze][01-26 22:03:45][7][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1579            c=*(cp-*p);x+=2*c;y+=2*c;
[analyze][01-26 22:03:45][8][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1579            c=*(cp-*p);x+=2*c;y+=2*c;
[analyze][01-26 22:03:45][9][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1578            c=*(cp-*p++);x+=c;y+=2*c;
[analyze][01-26 22:03:45][10][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1577            c=*(cp-*p++);y+=2*c;
[analyze][01-26 22:03:45][11][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1576            c=*(cp-*p++);x-=c;y+=2*c;
[analyze][01-26 22:03:45][12][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1575            c=*(cp-*p++);x-=2*c;y+=2*c;
[analyze][01-26 22:03:45][13][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=-2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1575            c=*(cp-*p++);x-=2*c;y+=2*c;
[analyze][01-26 22:03:45][14][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1571            c=*(cp-*p++);x+=2*c;y+=c;
[analyze][01-26 22:03:45][15][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=-2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1567            c=*(cp-*p++);x-=2*c;y+=c;
[analyze][01-26 22:03:45][16][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1562            c=*(cp-*p++);x+=2*c;
[analyze][01-26 22:03:45][17][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=-2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1558            c=*(cp-*p++);x-=2*c;
[analyze][01-26 22:03:45][18][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1553            c=*(cp-*p++);x+=2*c;y-=c;
[analyze][01-26 22:03:45][19][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=-2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1549            c=*(cp-*p++);x-=2*c;y-=c;
[analyze][01-26 22:03:45][20][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=-2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1545            c=*(cp-*p);x+=2*c;y-=2*c;
[analyze][01-26 22:03:45][21][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1545            c=*(cp-*p);x+=2*c;y-=2*c;
[analyze][01-26 22:03:45][22][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=-2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1544            c=*(cp-*p++);x+=c;y-=2*c;
[analyze][01-26 22:03:45][23][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=-2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1543            c=*(cp-*p++);y-=2*c;
[analyze][01-26 22:03:45][24][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=-2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1542            c=*(cp-*p++);x-=c;y-=2*c;
[analyze][01-26 22:03:45][25][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=-2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1541            c=*(cp-*p++);x-=2*c;y-=2*c;
[analyze][01-26 22:03:45][26][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=-2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1541            c=*(cp-*p++);x-=2*c;y-=2*c;
[analyze][01-26 22:03:45][27][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1533            x=0;y=0;
[analyze][01-26 22:03:45][28][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1533            x=0;y=0;
[analyze][01-26 22:03:45][29][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=100)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1459        n=100;
[analyze][01-26 22:03:45][30][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=5)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1458    for (j=5;j<x_size-5;j++) {
[analyze][01-26 22:03:45][31][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=5)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1457  for (i=5;i<y_size-5;i++)
[analyze][01-26 22:03:45][32][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=4 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1455  cgy=(int *)malloc(x_size*y_size*sizeof(int));
[analyze][01-26 22:03:45][33][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=4 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1454  cgx=(int *)malloc(x_size*y_size*sizeof(int));
[analyze][01-26 22:03:45][34][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=4 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1452  memset (r,0,x_size * y_size * sizeof(int));
[analyze][01-26 22:03:45][35][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function susan_corners is 7688. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1443 void susan_corners(uchar* in, int* r, uchar* bp,
[analyze][01-26 22:03:45][36][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=4)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1035              if (j<4) j=4;
[analyze][01-26 22:03:45][37][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=4)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1034              if (i<4) i=4;
[analyze][01-26 22:03:45][38][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=100)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1031              mid[(i)*x_size+j]=100;
[analyze][01-26 22:03:45][39][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=4)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1004              if (j<4) j=4;
[analyze][01-26 22:03:45][40][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=4)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1003              if (i<4) i=4;
[analyze][01-26 22:03:45][41][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=100)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1000              mid[(i)*x_size+j]=100;
[analyze][01-26 22:03:45][42][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=3)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:958                mid[(i+y)*x_size+j+x]=3;  /* no jumping needed */
[analyze][01-26 22:03:45][43][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=100)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:957                mid[(i)*x_size+j]=100;
[analyze][01-26 22:03:45][44][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:950              else     { x=0; y=1; }
[analyze][01-26 22:03:45][45][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:950              else     { x=0; y=1; }
[analyze][01-26 22:03:45][46][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:949              if (b02) { x=1; y=0; }
[analyze][01-26 22:03:45][47][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:949              if (b02) { x=1; y=0; }
[analyze][01-26 22:03:45][48][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:945              else     { x=-1; y=0; }
[analyze][01-26 22:03:45][49][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=-1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:945              else     { x=-1; y=0; }
[analyze][01-26 22:03:45][50][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=-1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:944              if (b02) { x=0; y=-1; }
[analyze][01-26 22:03:45][51][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:944              if (b02) { x=0; y=-1; }
[analyze][01-26 22:03:45][52][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=4)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:922              if (j<4) j=4;
[analyze][01-26 22:03:45][53][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=4)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:921              if (i<4) i=4;
[analyze][01-26 22:03:45][54][InitializeArrayByForLoopAnalyzer]msg:init array in for loop /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:916              mid[(i+a-1)*x_size+j+b-1] = mid[i*x_size+j]+1;
[analyze][01-26 22:03:45][55][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=4)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:914              mid[(i+a-1)*x_size+j+b-1] = 4;
[analyze][01-26 22:03:45][56][InitializeArrayByForLoopAnalyzer]msg:init array in for loop /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:914              mid[(i+a-1)*x_size+j+b-1] = 4;
[analyze][01-26 22:03:45][57][ForLoopToZeroAnalyzer]msg:Loop iterator is initiated to 0 (may be rewrite with a reverse loop to 0) /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:907           for(y=0; y<3; y++)
[analyze][01-26 22:03:45][58][ForLoopToZeroAnalyzer]msg:Loop iterator is initiated to 0 (may be rewrite with a reverse loop to 0) /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:908             for(x=0; x<3; x++)
[analyze][01-26 22:03:45][59][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:908            for(x=0; x<3; x++)
[analyze][01-26 22:03:45][60][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:907          for(y=0; y<3; y++)
[analyze][01-26 22:03:45][61][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:906          m=0;     /* find the highest point */
[analyze][01-26 22:03:45][62][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=4 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:904                                                l[2]*=2; l[1]*=3; l[3]*=3; l[0]*=4; } }}}}}}}
[analyze][01-26 22:03:45][63][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:904                                                l[2]*=2; l[1]*=3; l[3]*=3; l[0]*=4; } }}}}}}}
[analyze][01-26 22:03:45][64][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:903          else { if (mid[(i+1)*x_size+j+1]<8) { l[8]=0; l[5]=0; l[7]=0; l[6]*=2; 
[analyze][01-26 22:03:45][65][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:903          else { if (mid[(i+1)*x_size+j+1]<8) { l[8]=0; l[5]=0; l[7]=0; l[6]*=2; 
[analyze][01-26 22:03:45][66][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:903          else { if (mid[(i+1)*x_size+j+1]<8) { l[8]=0; l[5]=0; l[7]=0; l[6]*=2; 
[analyze][01-26 22:03:45][67][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:903          else { if (mid[(i+1)*x_size+j+1]<8) { l[8]=0; l[5]=0; l[7]=0; l[6]*=2; 
[analyze][01-26 22:03:45][68][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=4 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:902                                                l[5]*=2; l[0]*=3; l[2]*=3; l[1]*=4; }
[analyze][01-26 22:03:45][69][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:902                                                l[5]*=2; l[0]*=3; l[2]*=3; l[1]*=4; }
[analyze][01-26 22:03:45][70][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:901          else { if (mid[(i+1)*x_size+j]<8)   { l[7]=0; l[6]=0; l[8]=0; l[3]*=2; 
[analyze][01-26 22:03:45][71][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:901          else { if (mid[(i+1)*x_size+j]<8)   { l[7]=0; l[6]=0; l[8]=0; l[3]*=2; 
[analyze][01-26 22:03:45][72][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:901          else { if (mid[(i+1)*x_size+j]<8)   { l[7]=0; l[6]=0; l[8]=0; l[3]*=2; 
[analyze][01-26 22:03:45][73][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:901          else { if (mid[(i+1)*x_size+j]<8)   { l[7]=0; l[6]=0; l[8]=0; l[3]*=2; 
[analyze][01-26 22:03:45][74][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=4 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:900                                                l[8]*=2; l[1]*=3; l[5]*=3; l[2]*=4; }
[analyze][01-26 22:03:45][75][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:900                                                l[8]*=2; l[1]*=3; l[5]*=3; l[2]*=4; }
[analyze][01-26 22:03:45][76][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:899          else { if (mid[(i+1)*x_size+j-1]<8) { l[6]=0; l[3]=0; l[7]=0; l[0]*=2; 
[analyze][01-26 22:03:45][77][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:899          else { if (mid[(i+1)*x_size+j-1]<8) { l[6]=0; l[3]=0; l[7]=0; l[0]*=2; 
[analyze][01-26 22:03:45][78][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:899          else { if (mid[(i+1)*x_size+j-1]<8) { l[6]=0; l[3]=0; l[7]=0; l[0]*=2; 
[analyze][01-26 22:03:45][79][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:899          else { if (mid[(i+1)*x_size+j-1]<8) { l[6]=0; l[3]=0; l[7]=0; l[0]*=2; 
[analyze][01-26 22:03:45][80][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=4 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:898                                                l[7]*=2; l[0]*=3; l[6]*=3; l[3]*=4; }
[analyze][01-26 22:03:45][81][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:898                                                l[7]*=2; l[0]*=3; l[6]*=3; l[3]*=4; }
[analyze][01-26 22:03:45][82][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:897          else { if (mid[(i)*x_size+j+1]<8)   { l[5]=0; l[2]=0; l[8]=0; l[1]*=2; 
[analyze][01-26 22:03:45][83][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:897          else { if (mid[(i)*x_size+j+1]<8)   { l[5]=0; l[2]=0; l[8]=0; l[1]*=2; 
[analyze][01-26 22:03:45][84][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:897          else { if (mid[(i)*x_size+j+1]<8)   { l[5]=0; l[2]=0; l[8]=0; l[1]*=2; 
[analyze][01-26 22:03:45][85][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:897          else { if (mid[(i)*x_size+j+1]<8)   { l[5]=0; l[2]=0; l[8]=0; l[1]*=2; 
[analyze][01-26 22:03:45][86][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=4 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:896                                                l[7]*=2; l[2]*=3; l[8]*=3; l[5]*=4; }
[analyze][01-26 22:03:45][87][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:896                                                l[7]*=2; l[2]*=3; l[8]*=3; l[5]*=4; }
[analyze][01-26 22:03:45][88][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:895          else { if (mid[(i)*x_size+j-1]<8)   { l[3]=0; l[0]=0; l[6]=0; l[1]*=2; 
[analyze][01-26 22:03:45][89][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:895          else { if (mid[(i)*x_size+j-1]<8)   { l[3]=0; l[0]=0; l[6]=0; l[1]*=2; 
[analyze][01-26 22:03:45][90][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:895          else { if (mid[(i)*x_size+j-1]<8)   { l[3]=0; l[0]=0; l[6]=0; l[1]*=2; 
[analyze][01-26 22:03:45][91][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:895          else { if (mid[(i)*x_size+j-1]<8)   { l[3]=0; l[0]=0; l[6]=0; l[1]*=2; 
[analyze][01-26 22:03:45][92][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=4 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:894                                                l[8]*=2; l[3]*=3; l[7]*=3; l[6]*=4; }
[analyze][01-26 22:03:45][93][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:894                                                l[8]*=2; l[3]*=3; l[7]*=3; l[6]*=4; }
[analyze][01-26 22:03:45][94][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:893          else { if (mid[(i-1)*x_size+j+1]<8) { l[2]=0; l[1]=0; l[5]=0; l[0]*=2; 
[analyze][01-26 22:03:45][95][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:893          else { if (mid[(i-1)*x_size+j+1]<8) { l[2]=0; l[1]=0; l[5]=0; l[0]*=2; 
[analyze][01-26 22:03:45][96][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:893          else { if (mid[(i-1)*x_size+j+1]<8) { l[2]=0; l[1]=0; l[5]=0; l[0]*=2; 
[analyze][01-26 22:03:45][97][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:893          else { if (mid[(i-1)*x_size+j+1]<8) { l[2]=0; l[1]=0; l[5]=0; l[0]*=2; 
[analyze][01-26 22:03:45][98][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=4 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:892                                                l[5]*=2; l[6]*=3; l[8]*=3; l[7]*=4; }
[analyze][01-26 22:03:45][99][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:892                                                l[5]*=2; l[6]*=3; l[8]*=3; l[7]*=4; }
[analyze][01-26 22:03:45][100][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:891          else { if (mid[(i-1)*x_size+j]<8)   { l[1]=0; l[0]=0; l[2]=0; l[3]*=2; 
[analyze][01-26 22:03:45][101][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:891          else { if (mid[(i-1)*x_size+j]<8)   { l[1]=0; l[0]=0; l[2]=0; l[3]*=2; 
[analyze][01-26 22:03:45][102][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:891          else { if (mid[(i-1)*x_size+j]<8)   { l[1]=0; l[0]=0; l[2]=0; l[3]*=2; 
[analyze][01-26 22:03:45][103][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:891          else { if (mid[(i-1)*x_size+j]<8)   { l[1]=0; l[0]=0; l[2]=0; l[3]*=2; 
[analyze][01-26 22:03:45][104][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=4 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:890                                                l[6]*=2; l[5]*=3; l[7]*=3; l[8]*=4; }
[analyze][01-26 22:03:45][105][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:890                                                l[6]*=2; l[5]*=3; l[7]*=3; l[8]*=4; }
[analyze][01-26 22:03:45][106][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:889          if (mid[(i-1)*x_size+j-1]<8)        { l[0]=0; l[1]=0; l[3]=0; l[2]*=2; 
[analyze][01-26 22:03:45][107][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:889          if (mid[(i-1)*x_size+j-1]<8)        { l[0]=0; l[1]=0; l[3]=0; l[2]*=2; 
[analyze][01-26 22:03:45][108][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:889          if (mid[(i-1)*x_size+j-1]<8)        { l[0]=0; l[1]=0; l[3]=0; l[2]*=2; 
[analyze][01-26 22:03:45][109][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:889          if (mid[(i-1)*x_size+j-1]<8)        { l[0]=0; l[1]=0; l[3]=0; l[2]*=2; 
[analyze][01-26 22:03:45][110][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:886          l[3]=r[(i  )*x_size+j-1]; l[4]=0;                 l[5]=r[(i  )*x_size+j+1];
[analyze][01-26 22:03:45][111][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=100)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:870          mid[i*x_size+j]=100;
[analyze][01-26 22:03:45][112][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=4)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:849    for (j=4;j<x_size-4;j++)
[analyze][01-26 22:03:45][113][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=4)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:848  for (i=4;i<y_size-4;i++)
[analyze][01-26 22:03:45][114][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function susan_thin is 5184. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:839 void susan_thin(int* r, uchar* mid, int x_size, int y_size)
[analyze][01-26 22:03:45][115][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=100)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:499      n=100;
[analyze][01-26 22:03:45][116][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=3)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:497    for (j=3;j<x_size-3;j++)
[analyze][01-26 22:03:45][117][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=3)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:496  for (i=3;i<y_size-3;i++)
[analyze][01-26 22:03:45][118][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=4 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:494  memset (r,0,x_size * y_size * sizeof(int));
[analyze][01-26 22:03:45][119][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function susan_principle is 2176. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:488 void susan_principle(uchar* in, int* r, uchar* bp,
[analyze][01-26 22:03:45][120][ForLoopToZeroAnalyzer]msg:Loop iterator is initiated to 0 (may be rewrite with a reverse loop to 0) /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:449   for (i=0; i<size; i++)
[analyze][01-26 22:03:45][121][LoopDivideAnalyzer]msg:This loop can be divided into two loops for it has 1 code lines/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:449   for (i=0; i<size; i++)
[analyze][01-26 22:03:45][122][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:449  for (i=0; i<size; i++)
[analyze][01-26 22:03:45][123][ForLoopToZeroAnalyzer]msg:Loop iterator is initiated to 0 (may be rewrite with a reverse loop to 0) /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:437   for (i=0; i<size; i++)
[analyze][01-26 22:03:45][124][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:437  for (i=0; i<size; i++)
[analyze][01-26 22:03:45][125][FunctionCodeSizeAnalyzer]msg:Function: int_to_uchar has only 27 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:431 void int_to_uchar(int* r, uchar* in, int size)
[analyze][01-26 22:03:45][126][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function int_to_uchar is 416. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:431 void int_to_uchar(int* r, uchar* in, int size)
[analyze][01-26 22:03:45][127][FunctionCodeSizeAnalyzer]msg:Function: put_image has only 29 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:407 void put_image(char filename[100], char* in, int x_size, int y_size)
[analyze][01-26 22:03:45][128][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function put_image is 64. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:407 void put_image(char filename[100], char* in, int x_size, int y_size)
[analyze][01-26 22:03:45][129][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=2)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1402            mid[i*x_size+j] = 2;	
[analyze][01-26 22:03:45][130][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1400                                else { a=1; b=1; }}}
[analyze][01-26 22:03:45][131][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1400                                else { a=1; b=1; }}}
[analyze][01-26 22:03:45][132][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1399          else { /* diagonal */ if (w>0) { a=-1; b=1; }
[analyze][01-26 22:03:45][133][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=-1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1399          else { /* diagonal */ if (w>0) { a=-1; b=1; }
[analyze][01-26 22:03:45][134][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1398          else { if (z > 2.0) { /* horizontal */ a=1; b=0; }
[analyze][01-26 22:03:45][135][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1398          else { if (z > 2.0) { /* horizontal */ a=1; b=0; }
[analyze][01-26 22:03:45][136][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1397          if (z < 0.5) { /* vertical */ a=0; b=1; }
[analyze][01-26 22:03:45][137][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1397          if (z < 0.5) { /* vertical */ a=0; b=1; }
[analyze][01-26 22:03:45][138][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1373          x=0; y=0; w=0;
[analyze][01-26 22:03:45][139][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1373          x=0; y=0; w=0;
[analyze][01-26 22:03:45][140][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1373          x=0; y=0; w=0;
[analyze][01-26 22:03:45][141][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1368          do_symmetry=1;
[analyze][01-26 22:03:45][142][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1365            do_symmetry=1;
[analyze][01-26 22:03:45][143][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1362              mid[i*x_size+j] = 1;
[analyze][01-26 22:03:45][144][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1360                                   else { a=-1; b=1; }}}
[analyze][01-26 22:03:45][145][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=-1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1360                                   else { a=-1; b=1; }}}
[analyze][01-26 22:03:45][146][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1359            else { /* diag_edge */ if (w>0) { a=1; b=1; }
[analyze][01-26 22:03:45][147][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1359            else { /* diag_edge */ if (w>0) { a=1; b=1; }
[analyze][01-26 22:03:45][148][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1358            else { if (z > 2.0) { /* hor_edge */ a=1; b=0; }
[analyze][01-26 22:03:45][149][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1358            else { if (z > 2.0) { /* hor_edge */ a=1; b=0; }
[analyze][01-26 22:03:45][150][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1357            if (z < 0.5) { /* vert_edge */ a=0; b=1; }
[analyze][01-26 22:03:45][151][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1357            if (z < 0.5) { /* vert_edge */ a=0; b=1; }
[analyze][01-26 22:03:45][152][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1356            else w=1;
[analyze][01-26 22:03:45][153][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=-1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1355	    if (z < 0) { z=-z; w=-1; }
[analyze][01-26 22:03:45][154][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1350            do_symmetry=0;
[analyze][01-26 22:03:45][155][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1331          x=0;y=0;
[analyze][01-26 22:03:45][156][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1331          x=0;y=0;
[analyze][01-26 22:03:45][157][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=2)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1320    for (j=2;j<x_size-2;j++)
[analyze][01-26 22:03:45][158][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=2)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1319  for (i=2;i<y_size-2;i++)
[analyze][01-26 22:03:45][159][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=100)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1297      n=100;
[analyze][01-26 22:03:45][160][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1295    for (j=1;j<x_size-1;j++)
[analyze][01-26 22:03:45][161][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1294  for (i=1;i<y_size-1;i++)
[analyze][01-26 22:03:45][162][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=730)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1292  max_no = 730; /* ho hum ;) */
[analyze][01-26 22:03:45][163][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=4 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1290  memset (r,0,x_size * y_size * sizeof(int));
[analyze][01-26 22:03:45][164][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function susan_edges_small is 5032. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1283 void susan_edges_small(uchar* in, int* r, uchar* mid, uchar* bp,
[analyze][01-26 22:03:45][165][FunctionCodeSizeAnalyzer]msg:Function: printf has only 28 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:359     i = (i*10) + (c - '0');
[analyze][01-26 22:03:45][166][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1434      *p=0;
[analyze][01-26 22:03:45][167][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=255)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1428      *p++=255; *p++=255; *p=255;
[analyze][01-26 22:03:45][168][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=255)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1428      *p++=255; *p++=255; *p=255;
[analyze][01-26 22:03:45][169][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=255)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1428      *p++=255; *p++=255; *p=255;
[analyze][01-26 22:03:45][170][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=255)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1427      *p++=255; *p++=0;   *p=255; p+=x_size-2;
[analyze][01-26 22:03:45][171][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1427      *p++=255; *p++=0;   *p=255; p+=x_size-2;
[analyze][01-26 22:03:45][172][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=255)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1427      *p++=255; *p++=0;   *p=255; p+=x_size-2;
[analyze][01-26 22:03:45][173][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=255)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1426      *p++=255; *p++=255; *p=255; p+=x_size-2;
[analyze][01-26 22:03:45][174][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=255)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1426      *p++=255; *p++=255; *p=255; p+=x_size-2;
[analyze][01-26 22:03:45][175][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=255)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1426      *p++=255; *p++=255; *p=255; p+=x_size-2;
[analyze][01-26 22:03:45][176][FunctionCodeSizeAnalyzer]msg:Function: corner_draw has only 29 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1415 void corner_draw(uchar* in, CORNER_LIST corner_list,
[analyze][01-26 22:03:45][177][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function corner_draw is 160. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:1415 void corner_draw(uchar* in, CORNER_LIST corner_list,
[analyze][01-26 22:03:45][178][FunctionCodeSizeAnalyzer]msg:Function: free has only 3 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:488 void susan_principle(uchar* in, int* r, uchar* bp,
[analyze][01-26 22:03:45][179][DivideByTwosExponentAnalyzer]msg:divide by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:-1
[analyze][01-26 22:03:45][180][ForLoopToZeroAnalyzer]msg:Loop iterator is initiated to 0 (may be rewrite with a reverse loop to 0) /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:617   for(k=0; k<7; k++)
[analyze][01-26 22:03:45][181][ForLoopToZeroAnalyzer]msg:Loop iterator is initiated to 0 (may be rewrite with a reverse loop to 0) /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:618     for(l=0; l<(7-k); l++)
[analyze][01-26 22:03:45][182][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:618    for(l=0; l<(7-k); l++)
[analyze][01-26 22:03:45][183][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:617  for(k=0; k<7; k++)
[analyze][01-26 22:03:45][184][FunctionCodeSizeAnalyzer]msg:Function: median has only 31 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:604 uchar median(uchar* in, int i, int j, int x_size)
[analyze][01-26 22:03:45][185][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function median is 640. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:604 uchar median(uchar* in, int i, int j, int x_size)
[analyze][01-26 22:03:45][186][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=100)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:574      n=100;
[analyze][01-26 22:03:45][187][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:572    for (j=1;j<x_size-1;j++)
[analyze][01-26 22:03:45][188][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:571  for (i=1;i<y_size-1;i++)
[analyze][01-26 22:03:45][189][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=730)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:569  max_no = 730; /* ho hum ;) */
[analyze][01-26 22:03:45][190][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=4 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:567  memset (r,0,x_size * y_size * sizeof(int));
[analyze][01-26 22:03:45][191][FunctionCodeSizeAnalyzer]msg:Function: susan_principle_small has only 61 code lines, it's better to replace it with a macro. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:561 void susan_principle_small(uchar* in, int* r, uchar* bp,
[analyze][01-26 22:03:45][192][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function susan_principle_small is 1024. /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:561 void susan_principle_small(uchar* in, int* r, uchar* bp,
[analyze][01-26 22:03:45][193][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:765      total = 0;
[analyze][01-26 22:03:45][194][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:764      area = 0;
[analyze][01-26 22:03:45][195][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:762    for (j=1;j<x_size-1;j++)
[analyze][01-26 22:03:45][196][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=1)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:760  for (i=1;i<y_size-1;i++)
[analyze][01-26 22:03:45][197][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:728      total = 0;
[analyze][01-26 22:03:45][198][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=0)/home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:727      area = 0;
[analyze][01-26 22:03:45][199][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:705  n_max = (mask_size*2) + 1;
[analyze][01-26 22:03:45][200][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:696  tmp_image = (uchar *) malloc( (x_size+mask_size*2) * (y_size+mask_size*2) );
[analyze][01-26 22:03:45][201][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:696  tmp_image = (uchar *) malloc( (x_size+mask_size*2) * (y_size+mask_size*2) );
[analyze][01-26 22:03:45][202][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:690  if ( (2*mask_size+1>x_size) || (2*mask_size+1>y_size) )
[analyze][01-26 22:03:45][203][MultiplyByTwosExponentAnalyzer]msg:multiply by 2's exponent value=2 /home/damon/Workspace/yy/plugin-dev/test/Compiler_Group/k/susan.c:690  if ( (2*mask_size+1>x_size) || (2*mask_size+1>y_size) )
