[analyze][01-20 22:12:54][1][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=10)/root/plugin/yy/plugin-dev/test/Compiler Group/webqq/gele.cpp:16		val =10;
[analyze][01-20 22:12:54][2][GeAndLeCondAnalyzer]msg:>=min && <= max  /root/plugin/yy/plugin-dev/test/Compiler Group/webqq/gele.cpp:15	if(val <= max && val >= min) {
[analyze][01-20 22:12:54][3][FunctionCodeSizeAnalyzer]msg:Function: main has only 13 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/webqq/gele.cpp:9 int main()
[analyze][01-20 22:12:54][4][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 224. /root/plugin/yy/plugin-dev/test/Compiler Group/webqq/gele.cpp:9 int main()
[analyze][01-20 22:12:54][5][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=10)/root/plugin/yy/plugin-dev/test/Compiler Group/webqq/loop.c:16		val =10;
[analyze][01-20 22:12:54][6][GeAndLeCondAnalyzer]msg:>=min && <= max  /root/plugin/yy/plugin-dev/test/Compiler Group/webqq/loop.c:15	if(val <= max && val >= min) {
[analyze][01-20 22:12:54][7][FunctionCodeSizeAnalyzer]msg:Function: main has only 13 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/webqq/loop.c:9 int main()
[analyze][01-20 22:12:54][8][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 224. /root/plugin/yy/plugin-dev/test/Compiler Group/webqq/loop.c:9 int main()
[analyze][01-22 23:38:41][1][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-22 23:38:41][2][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 0 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/fun.cpp:0 
[analyze][01-22 23:38:41][3][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=10)/root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:16		val =10;
[analyze][01-22 23:38:41][4][GeAndLeCondAnalyzer]msg:>=min && <= max  /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:15	if(val <= max && val >= min) {
[analyze][01-22 23:38:41][5][FunctionCodeSizeAnalyzer]msg:Function: main has only 13 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-22 23:38:41][6][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 224. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-22 23:40:03][1][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-22 23:40:03][2][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 0 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/fun.cpp:0 
[analyze][01-22 23:40:03][3][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=10)/root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:16		val =10;
[analyze][01-22 23:40:03][4][GeAndLeCondAnalyzer]msg:>=min && <= max  /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:15	if(val <= max && val >= min) {
[analyze][01-22 23:40:03][5][FunctionCodeSizeAnalyzer]msg:Function: main has only 13 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-22 23:40:03][6][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 224. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-22 23:43:37][1][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-22 23:43:37][2][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 0 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/fun.cpp:0 
[analyze][01-22 23:43:37][3][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=10)/root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:16		val =10;
[analyze][01-22 23:43:37][4][GeAndLeCondAnalyzer]msg:>=min && <= max  /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:15	if(val <= max && val >= min) {
[analyze][01-22 23:43:37][5][FunctionCodeSizeAnalyzer]msg:Function: main has only 13 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-22 23:43:37][6][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 224. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-23 00:37:53][1][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-23 00:37:53][2][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 0 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/fun.cpp:0 
[analyze][01-23 00:37:53][3][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=10)/root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:16		val =10;
[analyze][01-23 00:37:53][4][GeAndLeCondAnalyzer]msg:>=min && <= max  /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:15	if(val <= max && val >= min) {
[analyze][01-23 00:37:53][5][FunctionCodeSizeAnalyzer]msg:Function: main has only 13 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-23 00:37:53][6][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 224. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-23 00:44:56][1][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-23 00:44:56][2][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 0 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/fun.cpp:0 
[analyze][01-23 00:44:56][3][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=10)/root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:16		val =10;
[analyze][01-23 00:44:56][4][GeAndLeCondAnalyzer]msg:>=min && <= max  /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:15	if(val <= max && val >= min) {
[analyze][01-23 00:44:56][5][FunctionCodeSizeAnalyzer]msg:Function: main has only 13 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-23 00:44:56][6][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 224. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-23 00:48:43][1][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-23 00:48:43][2][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 0 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/fun.cpp:0 
[analyze][01-23 00:48:43][3][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=10)/root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:16		val =10;
[analyze][01-23 00:48:43][4][GeAndLeCondAnalyzer]msg:>=min && <= max  /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:15	if(val <= max && val >= min) {
[analyze][01-23 00:48:43][5][FunctionCodeSizeAnalyzer]msg:Function: main has only 13 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-23 00:48:43][6][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 224. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-23 01:00:55][1][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-23 01:00:55][2][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 0 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/fun.cpp:0 
[analyze][01-23 01:00:55][3][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=10)/root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:16		val =10;
[analyze][01-23 01:00:55][4][GeAndLeCondAnalyzer]msg:>=min && <= max  /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:15	if(val <= max && val >= min) {
[analyze][01-23 01:00:55][5][FunctionCodeSizeAnalyzer]msg:Function: main has only 13 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-23 01:00:55][6][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 224. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-23 01:03:03][1][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-23 01:03:03][2][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 0 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/fun.cpp:0 
[analyze][01-23 01:03:03][3][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=10)/root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:16		val =10;
[analyze][01-23 01:03:03][4][GeAndLeCondAnalyzer]msg:>=min && <= max  /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:15	if(val <= max && val >= min) {
[analyze][01-23 01:03:03][5][FunctionCodeSizeAnalyzer]msg:Function: main has only 13 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-23 01:03:03][6][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 224. /root/plugin/yy/plugin-dev/test/Compiler Group/apt/a/b/gele.cpp:9 int main()
[analyze][01-23 03:45:24][1][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/project/a/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-23 03:45:24][2][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 0 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/project/a/b/fun.cpp:0 
[analyze][01-23 03:45:24][3][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=10)/root/plugin/yy/plugin-dev/test/Compiler Group/project/a/b/gele.cpp:16		val =10;
[analyze][01-23 03:45:24][4][GeAndLeCondAnalyzer]msg:>=min && <= max  /root/plugin/yy/plugin-dev/test/Compiler Group/project/a/b/gele.cpp:15	if(val <= max && val >= min) {
[analyze][01-23 03:45:24][5][FunctionCodeSizeAnalyzer]msg:Function: main has only 13 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/project/a/b/gele.cpp:9 int main()
[analyze][01-23 03:45:24][6][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 224. /root/plugin/yy/plugin-dev/test/Compiler Group/project/a/b/gele.cpp:9 int main()
[analyze][01-23 03:45:29][1][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 7 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/project/a/b/codesize.cpp:1 int mymax(int pa, int pb, int pc)
[analyze][01-23 03:45:29][2][FunctionCodeSizeAnalyzer]msg:Function: mymax has only 0 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/project/a/b/fun.cpp:0 
[analyze][01-23 03:45:29][3][AssignToConstantAnalyzer]msg:Here:Assign to integer constant (value=10)/root/plugin/yy/plugin-dev/test/Compiler Group/project/a/b/gele.cpp:16		val =10;
[analyze][01-23 03:45:29][4][GeAndLeCondAnalyzer]msg:>=min && <= max  /root/plugin/yy/plugin-dev/test/Compiler Group/project/a/b/gele.cpp:15	if(val <= max && val >= min) {
[analyze][01-23 03:45:29][5][FunctionCodeSizeAnalyzer]msg:Function: main has only 13 code lines, it's better to replace it with a macro. /root/plugin/yy/plugin-dev/test/Compiler Group/project/a/b/gele.cpp:9 int main()
[analyze][01-23 03:45:29][6][LocalVarSizeAnalyzer]msg:The total size of local stack variables of function main is 224. /root/plugin/yy/plugin-dev/test/Compiler Group/project/a/b/gele.cpp:9 int main()
