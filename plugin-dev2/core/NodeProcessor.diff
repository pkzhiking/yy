79c79,85
< 	return globalASTTreePointer->findNodeByIndex(node->getProperty(string("op ")+Util::intToString(opIndex))->mNodeProperty);
---
> 	//todo: 段错误
> 	if (node->getProperty(string("op ")+Util::intToString(opIndex)) != NULL) {
> 		return globalASTTreePointer->findNodeByIndex(node->getProperty(string("op ")+Util::intToString(opIndex))->mNodeProperty);
> 	}else{
> 		return NULL;
> 	}
> 
96a103,104
> 	if (node == NULL)
> 		return false;
275a284,287
> 		//todo:段错误
> 			if (tmpNode == NULL){
> 				return NULL;
> 			}
278a291,294
> 			//todo:段错误
> 			if (tmpNode == NULL){
> 				break;
> 			}
282c298,299
< 	throw Error();
---
> 	//todo: 段错误
> 	//throw Error();
289a307,308
> 		if ( node->getProperty("cond") == NULL)
> 			return 0;
409,412c428,433
< 	if ( "truth_orif_expr" == node->getTreeCode() )
< 		return true;
< 	if ( "truth_andif_expr" == node->getTreeCode() )
< 		return true;
---
> 	if (node != NULL){
> 		if ( "truth_orif_expr" == node->getTreeCode() )
> 			return true;
> 		if ( "truth_andif_expr" == node->getTreeCode() )
> 			return true;
> 	}
415a437
> 	if (node != NULL){
427a450
> 	}
431a455,457
> 	if (node == NULL){
> 		return false;
> 	}
437a464,466
> 	if (node == NULL){
> 		return false;
> 	}
443a473,475
> 	if (node == NULL){
> 		return false;
> 	}
449a482,484
> 	if (node == NULL){
> 		return false;
> 	}
455a491,493
> 	if (node == NULL){
> 		return false;
> 	}
465a504,506
> 	if (node == NULL){
> 		return false;
> 	}
471a513,515
> 	if (node == NULL){
> 		return false;
> 	}
477a522,524
> 	if (node == NULL){
> 		return false;
> 	}
483a531,532
> 	if (node1 != NULL && node2 != NULL)
> 	{
485a535
> 	}
490a541,542
> 	if (node->getProperty("op 0") == NULL)
> 		return -1;
496a549,550
> 				if (opNode->getProperty("op 0") == NULL)
> 					return -1;
584,586c638
< 			if(node->getProperty("body") != NULL){
< 					node = globalASTTreePointer->findNodeByIndex(node->getProperty("body")->mNodeProperty);
< 			}else{
---
> 			if(node->getProperty("body") == NULL){
589d640
< 
602c653
< 						if (tNode->getTreeCode() == "modify_expr"){
---
> 						if (tNode->getTreeCode() == "modify_expr" || tNode->getTreeCode() == "postincrement_expr" || tNode->getTreeCode() == "postdecrement_expr"){
606a658,662
> 								}else{
> 									if (varNode->getTreeCode() == "var_decl"){
> 										if (varNode->getIndex() == varID)
> 											return true;
> 									}
620a677,679
> 	if (node == NULL){
> 		return false;
> 	}
627a687,689
> 	if (node == NULL){
> 		return false;
> 	}
634a697,699
> 	if (node == NULL){
> 		return false;
> 	}
641a707,709
> 	if (node == NULL){
> 		return false;
> 	}
649a718,720
> 	if (node == NULL){
> 		return false;
> 	}
654a726,834
> 
> bool NodeProcessor::isParamDecl(GNode *node) throw (Error) {
>     if(node == NULL){
>         return false;
>     }
>     if("parm_decl" == node->getTreeCode())
>         return true;
>     else 
>         return false;
> }
> 
> GNode *NodeProcessor::isForContainIf(GNode* node)throw (Error ){
> 
> 
> 	if (node->getProperty("body") == NULL)
> 		return NULL;
> 		GNode* opNode = globalASTTreePointer->findNodeByIndex(node->getProperty("body")->mNodeProperty);
> 
> 		if (opNode != NULL){
> 				if (opNode->getTreeCode() != "cond_expr"){
> 					return NULL;
> 				}
> 				if (opNode->getProperty("op 0") != NULL)
> 				return globalASTTreePointer->findNodeByIndex(opNode->getProperty("op 0")->mNodeProperty);
> 		}
> 
> 
> 		return NULL;
> 
> }
> int NodeProcessor::getConditonVar(GNode* node, string op)throw (Error ){
> 
> 	if (node != NULL){
> 					if (node->getTreeCode().find("truth_") != string::npos){
> 						return -1;
> 					}
> 					if (node->getProperty(op) == NULL)
> 						return -1;
> 					GNode* varNode = globalASTTreePointer->findNodeByIndex(node->getProperty(op)->mNodeProperty);
> 					if (varNode->getTreeCode().find("var_") == string::npos){
> 						if (varNode->getTreeCode().find("array_ref") == string::npos){
> 							  return -1;
> 						}else{
> 							if (varNode->getProperty("op 0") != NULL)
> 							  return varNode->getProperty("op 0")->mNodeProperty;
> 						}
> 					}
> 					return node->getProperty(op)->mNodeProperty;
> 			}
> 			return -1;
> 
> }
> 
> 
> bool NodeProcessor::isCurrentFunctionDecl(GNode *node) throw(Error){
> 			if (node->getProperty("name") == NULL)
> 				return false;
> 			 GNode* nameNode = globalASTTreePointer->findNodeByIndex(node->getProperty("name")->mNodeProperty);
> 			 if (nameNode->getProperty("strg") == NULL){
> 				 return false;
> 			 }
> 
> 
> 			 if (nameNode->getProperty("strg")->mStringProperty == globalASTTreePointer->_getFunctionName()){
> 				 return true;
> 			 }else{
> 				 return false;
> 			 }
> 
> 
> }
> GNode *NodeProcessor::getFuncTypeNode(GNode *node) throw(Error){
> 			if (node->getProperty("type") == NULL){
> 					return NULL;
> 				}
> 			return globalASTTreePointer->findNodeByIndex(node->getProperty("type")->mNodeProperty);
> }
> bool NodeProcessor::isFunctionReturnRecordType(GNode *node) throw(Error){
> 		if (node->getProperty("retn") == NULL){
> 			return false;
> 		}
> 		GNode* returnNode = globalASTTreePointer->findNodeByIndex(node->getProperty("retn")->mNodeProperty);
> 		if (returnNode->getTreeCode() == "record_type"){
> 				return true;
> 		}else{
> 			return false;
> 		}
> }
> bool NodeProcessor::isFunctionPrmsRecordType(GNode *node) throw(Error){
> 		if (node->getProperty("prms") == NULL){
> 			return false;
> 		}
> 		GNode* prmsNode = globalASTTreePointer->findNodeByIndex(node->getProperty("prms")->mNodeProperty);
> 		while(true){
> 			if (prmsNode->getProperty("valu") == NULL){
> 				return false;
> 			}
> 			string prmsType = globalASTTreePointer->findNodeByIndex(prmsNode->getProperty("valu")->mNodeProperty)->getTreeCode();
> 			if (prmsType == "record_type"){
> 				return true;
> 			}
> 			if (prmsNode->getProperty("chan") == NULL){
> 				return false;
> 			}
> 			prmsNode = globalASTTreePointer->findNodeByIndex(prmsNode->getProperty("chan")->mNodeProperty);
> 		}
> 
> 
> }
